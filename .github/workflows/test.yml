name: Unit Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('test_requirements.txt') }}-test-v01
      - name: Install package
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install .
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r test_requirements.txt
      - name: Lint
        run: bash scripts/lint.sh

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('requirements-tests.txt') }}-test-v01
      - name: Install package
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install .
      - name: Install Test Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -r test_requirements.txt
      - name: Test
        run: bash scripts/test.sh
        env:
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}